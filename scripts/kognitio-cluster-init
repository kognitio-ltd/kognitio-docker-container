#!/bin/bash

# script to initialise a cluster

sysid=$1
volumes=$2
volsize=$3
lk=$2

confile=/data/config/config
secretfile=/data/config/secret

mkdir -p /data/config
mkdir -p /data/nodes
mkdir -p /data/dfs


if [ -f "$confile" ] ; then
   echo "The /data volume already contains an initialised system."
   echo "To overwrite either start with a fresh volume or manually"
   echo "run kognitio-cluster-reset."
   exit 2
fi

if [ ! -f /data/config/.eula-accepted ] ; then
   echo "You must accept the Kognitio End User License Agreement to use Kognitio"
   echo "Would you like to see this now (type 'yes' to see it)?"
   read qq
   if [ "$qq" == "yes" ] ; then
      more /opt/kognitio/LICENSE
   fi
   echo "Do you accept the Kognitio EULA?"
   echo "Enter 'yes' to accept or anything else to reject"

   read qqq
   if [ "$qqq" == "yes" ] ; then
      echo "You have accepted the EULA."
      touch /data/config/.eula-accepted
   else
      echo "EULA is not accepted. Exiting."
      exit 69
   fi
fi


while [ -z "$sysid" ] ; do
    echo "Enter a system ID for your Kognitio cluster 
(up to 12 characters, [a-z0-9_]) :"
    read sysid
done


while [ -z "$volumes" ] ; do
    echo "Enter the number of storage volumes to create."
    echo "You will be asked for the size of each volume later."
    echo "Storage volumes are sparse files which hold the data stored in Kognitio."
    
    read volumes
done


while [ -z "$volsize" ] ; do
    echo "Enter the maximum storage size in Gb for each storage volume."
    echo "The minimum limit for a storage volume is 10G."
    
    read volsize
done

while [ -z "$lk" ] ; do
    echo "Enter a Kognitio license key for the cluster."
    echo "If you do not have a license key enter - instead."
    echo "Kognitio can be freely used without a license for clusters with"
    echo "less than 512G of RAM."

    read lk
done

wxsvc stop
pkill -9 wxdb


cat >$confile <<EOF
# This file should only be edited with wxviconf or wxconftool!

[general]
system_id=${sysid}

[boot options]
external_tables=yes
external_scripts=yes
idle_core_cost=0
numa_aware=no

[disks]
sparse_file=yes

EOF

chmod 644 $confile



secret=
# Generate a shared secret for message passing signature (use 0 to 9, a to z, A to Z, - and _)
for i in {0..63} # Its 64 characters long
do
    char=$((RANDOM%64 + 48)) # 48 is '0' start from '0'
    if [ $char -gt 57 ]; then # 57 is '9'
        let char=($char + 7)  # Move char into A - Z area
    fi
    if [ $char -gt 90 ]; then # 90 is 'Z'
        let char=($char + 6)  # Move char into a - z area
    fi
    if [ $char -eq 123 ]; then # 123 is '{'
        let char=95            # 95 is '_' swap { for _
    elif [ $char -eq 124 ]; then # 124 is '|'
        let char=45              # 45 is '-' swap | for -
    fi
    secret=${secret}$(printf "\x$(printf %x $char)")
done

echo "$secret" >$secretfile
chmod 600 $secretfile


cp -fp $secretfile /opt/kognitio/wx2/etc/secret
cp -fp $confile /opt/kognitio/wx2/etc/config

if [ -n "$lk" ] && [ "$lk" != "-" ]; then
   wxlicense -Ak $lk
fi

wxsvc start

sleep 5

create-kognitio-volumes $volumes $volsize



